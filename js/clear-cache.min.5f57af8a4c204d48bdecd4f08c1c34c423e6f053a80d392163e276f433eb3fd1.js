async function clearAllCaches(){console.log("🧹 Starting comprehensive cache cleanup...");try{if("caches"in window){console.log("🗂️ Clearing service worker caches...");const e=await caches.keys();console.log(`Found ${e.length} cache(s):`,e);const t=e.map(async e=>(console.log(`Deleting cache: ${e}`),await caches.delete(e)));await Promise.all(t),console.log("✅ All service worker caches cleared")}if(typeof Storage!="undefined"&&localStorage){console.log("📦 Clearing localStorage...");const e=Object.keys(localStorage);console.log(`Found ${e.length} localStorage items`),localStorage.clear(),console.log("✅ localStorage cleared")}if(typeof Storage!="undefined"&&sessionStorage){console.log("📦 Clearing sessionStorage...");const e=Object.keys(sessionStorage);console.log(`Found ${e.length} sessionStorage items`),sessionStorage.clear(),console.log("✅ sessionStorage cleared")}if("indexedDB"in window&&console.log("🗃️ Checking IndexedDB..."),"serviceWorker"in navigator){console.log("🔧 Unregistering service workers...");const e=await navigator.serviceWorker.getRegistrations();console.log(`Found ${e.length} service worker registration(s)`);const t=e.map(async e=>(console.log(`Unregistering service worker: ${e.scope}`),await e.unregister()));await Promise.all(t),console.log("✅ All service workers unregistered")}console.log("🔄 Requesting hard refresh..."),console.log("🎉 Cache cleanup completed successfully!"),document.body&&showCacheCleanupNotification("✅ All caches cleared successfully!"),setTimeout(()=>{console.log("🔄 Reloading page with cleared cache..."),window.location.reload(!0)},2e3)}catch(e){console.error("❌ Error during cache cleanup:",e),document.body&&showCacheCleanupNotification("❌ Error clearing caches: "+e.message)}}function showCacheCleanupNotification(e){const n=document.getElementById("cache-cleanup-notification");n&&n.remove();const t=document.createElement("div");t.id="cache-cleanup-notification",t.style.cssText=`
        position: fixed;
        top: 20px;
        right: 20px;
        background: #2d3748;
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 10000;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        font-size: 14px;
        max-width: 300px;
        border-left: 4px solid #48bb78;
    `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.remove()},5e3)}async function clearSpecificCache(e){if("caches"in window){console.log(`🗂️ Clearing specific cache: ${e}`);const t=await caches.delete(e);return console.log(t?`✅ Cache "${e}" deleted`:`❌ Cache "${e}" not found`),t}return!1}async function listAllCaches(){if("caches"in window){const e=await caches.keys();return console.log("📋 Current caches:",e),e}return[]}window.location.search.includes("clear-cache")&&(console.log("🚀 Auto-running cache cleanup from URL parameter..."),clearAllCaches()),window.location.hash==="#clear-cache"&&(console.log("🚀 Auto-running cache cleanup from URL hash..."),clearAllCaches()),window.clearAllCaches=clearAllCaches,window.clearSpecificCache=clearSpecificCache,window.listAllCaches=listAllCaches