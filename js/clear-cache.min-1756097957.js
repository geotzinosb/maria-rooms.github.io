async function clearAllCaches(){console.log("🧹 Starting comprehensive cache cleanup...");try{if("caches"in window){console.log("🗂️ Clearing service worker caches...");const e=await caches.keys();console.log(`Found ${e.length} cache(s):`,e);const o=e.map(async e=>(console.log(`Deleting cache: ${e}`),await caches.delete(e)));await Promise.all(o),console.log("✅ All service worker caches cleared")}if("undefined"!=typeof Storage&&localStorage){console.log("📦 Clearing localStorage...");const e=Object.keys(localStorage);console.log(`Found ${e.length} localStorage items`),localStorage.clear(),console.log("✅ localStorage cleared")}if("undefined"!=typeof Storage&&sessionStorage){console.log("📦 Clearing sessionStorage...");const e=Object.keys(sessionStorage);console.log(`Found ${e.length} sessionStorage items`),sessionStorage.clear(),console.log("✅ sessionStorage cleared")}if("indexedDB"in window&&console.log("🗃️ Checking IndexedDB..."),"serviceWorker"in navigator){console.log("🔧 Unregistering service workers...");const e=await navigator.serviceWorker.getRegistrations();console.log(`Found ${e.length} service worker registration(s)`);const o=e.map(async e=>(console.log(`Unregistering service worker: ${e.scope}`),await e.unregister()));await Promise.all(o),console.log("✅ All service workers unregistered")}console.log("🔄 Requesting hard refresh..."),console.log("🎉 Cache cleanup completed successfully!"),document.body&&showCacheCleanupNotification("✅ All caches cleared successfully!"),setTimeout(()=>{console.log("🔄 Reloading page with cleared cache..."),window.location.reload(!0)},2e3)}catch(e){console.error("❌ Error during cache cleanup:",e),document.body&&showCacheCleanupNotification("❌ Error clearing caches: "+e.message)}}function showCacheCleanupNotification(e){const o=document.getElementById("cache-cleanup-notification");o&&o.remove();const c=document.createElement("div");c.id="cache-cleanup-notification",c.style.cssText="\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: #2d3748;\n        color: white;\n        padding: 15px 20px;\n        border-radius: 8px;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n        z-index: 10000;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        font-size: 14px;\n        max-width: 300px;\n        border-left: 4px solid #48bb78;\n    ",c.textContent=e,document.body.appendChild(c),setTimeout(()=>{c.parentNode&&c.remove()},5e3)}async function clearSpecificCache(e){if("caches"in window){console.log(`🗂️ Clearing specific cache: ${e}`);const o=await caches.delete(e);return console.log(o?`✅ Cache "${e}" deleted`:`❌ Cache "${e}" not found`),o}return!1}async function listAllCaches(){if("caches"in window){const e=await caches.keys();return console.log("📋 Current caches:",e),e}return[]}window.location.search.includes("clear-cache")&&(console.log("🚀 Auto-running cache cleanup from URL parameter..."),clearAllCaches()),"#clear-cache"===window.location.hash&&(console.log("🚀 Auto-running cache cleanup from URL hash..."),clearAllCaches()),window.clearAllCaches=clearAllCaches,window.clearSpecificCache=clearSpecificCache,window.listAllCaches=listAllCaches;