class ImageOptimizer{constructor(){this.observer=null,this.init()}init(){"IntersectionObserver"in window?(this.observer=new IntersectionObserver(e=>this.handleIntersection(e),{rootMargin:"50px"}),this.observeImages()):this.loadAllImages()}observeImages(){document.querySelectorAll("img[data-src]").forEach(e=>this.observer.observe(e))}handleIntersection(e){e.forEach(e=>{e.isIntersecting&&(this.loadImage(e.target),this.observer.unobserve(e.target))})}loadImage(e){const t=e.dataset.src;t&&(e.src=t,e.classList.remove("lazy"),e.classList.add("loaded"))}loadAllImages(){document.querySelectorAll("img[data-src]").forEach(e=>this.loadImage(e))}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>new ImageOptimizer):new ImageOptimizer;